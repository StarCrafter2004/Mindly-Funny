import { Context } from "telegraf";
import { Telegraf, Markup } from "telegraf";
import { api } from "../../api/axiosInstance";
import fs from "fs";
import path from "path";

export function registerStartCommand(bot: Telegraf<Context>) {
  bot.start(async (ctx) => {
    const parts = ctx.message.text.split(" ");
    const telegram_id = Number(ctx.from.id);
    const refParam = parts[1];
    const referrer_id = Number(refParam);
    console.log("referrer_id", referrer_id);
    if (refParam) {
      if (isNaN(referrer_id)) {
        await ctx.reply("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞.");
      } else if (telegram_id === referrer_id) {
        await ctx.reply("–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—é –∂–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.");
      } else {
        try {
          console.log("telegram_id", telegram_id);
          console.log("referrer_id", referrer_id);
          await api.post(`/api/referrals`, {
            data: {
              user_id: telegram_id,
              referrer_id,
            },
          });
          console.log("—É—Å–ø–µ—Ö");

          await ctx.reply("–í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!");
        } catch (err: any) {
          if (err.response?.status === 400) {
            await ctx.reply("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞.");
          } else {
            await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞.");
            console.error(err.message);
          }
        }
      }
    }

    // –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º, –∫–Ω–æ–ø–∫–æ–π –∏ —Ç–µ–∫—Å—Ç–æ–º
    const imagePath = path.join(__dirname, "../../assets/image.png"); // –ø—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ
    const imageBuffer = fs.readFileSync(imagePath);

    await ctx.replyWithPhoto(
      { source: imageBuffer },
      {
        caption:
          "üé≠ Open the app where every quiz feels like a mini-show!\n\n" +
          "In just 3 minutes you‚Äôll get your personal meme-diagnosis ü§Ø\n" +
          "and the perfect reason for a story üì±‚ú®\n\n" +
          "Quizzes on all kinds of topics: anime üéå, movies üé¨,\n" +
          "relationships ‚ù§Ô∏è and more üåç\n\n" +
          "Open it ‚Äî and find out who you are today üîÆ",
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Open miniapp",
                web_app: { url: `${process.env.PUBLIC_URL}` },
              },
            ],
          ],
        },
      }
    );
  });
}
